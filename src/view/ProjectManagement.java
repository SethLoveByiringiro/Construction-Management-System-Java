/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.ProjectAssignmentRequestDao;
import DAO.ProjectDao;
import DAO.RequestDao;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Project;
import model.ProjectAssignmentRequest;
import model.Request;
import util.ProjectIDGenerator;



/**
 *
 * @author Love Byiringiro
 */
public class ProjectManagement extends javax.swing.JFrame {

    /**
     * Creates new form ProjectManagement
     */
    public ProjectManagement() {
        initComponents();
        setupProjectsJTable();
        setupProjectAssignmentRequestsTable();
        
    }
    private JDialog descriptionDialog;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        updateBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        addBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        projectAssignmentRequestsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        projectNameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        locationTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        endDateChooser = new com.toedter.calendar.JDateChooser();
        startDateChooser = new com.toedter.calendar.JDateChooser();
        denyBTN = new javax.swing.JButton();
        approveBTN = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        projectjTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        projectIDTextField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        descriptionTextField = new javax.swing.JTextArea();
        backBTN = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(25, 21, 74));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("PROJECT MANAGEMENT");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, -1, -1));

        updateBTN.setBackground(new java.awt.Color(255, 255, 255));
        updateBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updateBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/up.png"))); // NOI18N
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });
        jPanel2.add(updateBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 400, -1, 40));

        deleteBTN.setBackground(new java.awt.Color(255, 255, 255));
        deleteBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/user.png"))); // NOI18N
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });
        jPanel2.add(deleteBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 400, -1, 40));

        addBTN.setBackground(new java.awt.Color(255, 255, 255));
        addBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/add.png"))); // NOI18N
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });
        jPanel2.add(addBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 400, 80, -1));

        projectAssignmentRequestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        projectAssignmentRequestsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectAssignmentRequestsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(projectAssignmentRequestsTable);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 170, 606, 128));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("NAME:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, -1, -1));

        projectNameTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel2.add(projectNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 461, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("DESCRIPTION:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("END DATE:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("LOCATION:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, -1, -1));

        locationTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel2.add(locationTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 461, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("START DATE:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, -1, -1));
        jPanel2.add(endDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 224, -1));
        jPanel2.add(startDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 224, -1));

        denyBTN.setBackground(new java.awt.Color(255, 255, 255));
        denyBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        denyBTN.setForeground(new java.awt.Color(255, 0, 0));
        denyBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/delete.png"))); // NOI18N
        denyBTN.setText("DENY");
        denyBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                denyBTNActionPerformed(evt);
            }
        });
        jPanel2.add(denyBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 320, -1, -1));

        approveBTN.setBackground(new java.awt.Color(0, 102, 51));
        approveBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        approveBTN.setForeground(new java.awt.Color(255, 255, 255));
        approveBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/checkmark.png"))); // NOI18N
        approveBTN.setText("APPROVE");
        approveBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBTNActionPerformed(evt);
            }
        });
        jPanel2.add(approveBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 320, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Requests Data Table");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 120, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Project Assignment Requests ");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 80, 310, -1));

        projectjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(projectjTable);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, 760, 128));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Project Data Table");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("ID:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, -1, -1));

        projectIDTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(projectIDTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 460, -1));

        descriptionTextField.setColumns(20);
        descriptionTextField.setRows(5);
        jScrollPane3.setViewportView(descriptionTextField);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 460, 90));

        backBTN.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/replay.png"))); // NOI18N
        backBTN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });
        jPanel2.add(backBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(1430, 610, 80, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/construction.png"))); // NOI18N
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1530, 660));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
        // Retrieve values from input fields
     String projectID = projectIDTextField.getText().trim();
     String projectName = projectNameTextField.getText().trim();
     String description = descriptionTextField.getText().trim();
     String location = locationTextField.getText().trim();
     Date startDate = startDateChooser.getDate();
     Date endDate = endDateChooser.getDate();

     // Validate fields
     if (!validateInput(projectName, description, location, startDate, endDate)) {
         JOptionPane.showMessageDialog(this, "Please fill in all fields with valid data.", "Error", JOptionPane.ERROR_MESSAGE);
         return;
     }

     // Check if the project with the specified projectID exists
     ProjectDao projectDao = new ProjectDao("jdbc:mysql://localhost:3306/construction_management_system_db", "root", "");
     Project existingProject = projectDao.getProjectByID(projectID);

     if (existingProject == null) {
         JOptionPane.showMessageDialog(this, "Project with ID " + projectID + " does not exist. Cannot update.", "Error", JOptionPane.ERROR_MESSAGE);
         return;
     }

     // Create a Project object with updated information
     Project updatedProject = new Project(projectID, projectName, description, location, startDate, endDate);

     // Call the updateProject() method
     projectDao.updateProject(updatedProject);

     // Display a success message
     JOptionPane.showMessageDialog(this, "Project information updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
     clearInputFields();
     setupProjectsJTable();
    }//GEN-LAST:event_updateBTNActionPerformed

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
            // Retrieve the selected row from the projects table
    int selectedRow = projectjTable.getSelectedRow();

    // Check if a row is selected
    if (selectedRow != -1) {
        // Retrieve the projectID from the selected row as a String
        String projectIDToDelete = projectjTable.getValueAt(selectedRow, 0).toString();

        // Confirm the deletion with the user
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this project?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.YES_OPTION) {
            // Delete the project from the database using ProjectDao
            ProjectDao projectDao = new ProjectDao("jdbc:mysql://localhost:3306/construction_management_system_db", "root", "");

            boolean deleteSuccess = projectDao.deleteProject(projectIDToDelete);

            // Display a success or error message based on the result
            if (deleteSuccess) {
                JOptionPane.showMessageDialog(this, "Project deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                // Refresh the projects table after deletion
                setupProjectsJTable();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete project. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a project to delete.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    setupProjectsJTable();
    }//GEN-LAST:event_deleteBTNActionPerformed

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        // Retrieve project details from the input fields
    String projectName = projectNameTextField.getText().trim();
    String description = descriptionTextField.getText().trim();
    String location = locationTextField.getText().trim();
    Date startDate = startDateChooser.getDate();
    Date endDate = endDateChooser.getDate();

    // Validate input fields
    if (!validateInput(projectName, description, location, startDate, endDate)) {
        // If validation fails, show an error message and return
        JOptionPane.showMessageDialog(this, "Please fill in all fields with valid data.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Generate a unique projectID based on project attributes
    String projectID = ProjectIDGenerator.generateProjectID(projectName, location);

    // Create a Project object with the retrieved details
    Project newProject = new Project(projectID, projectName, description, location, startDate, endDate);

        // Add the new project to the database using ProjectDao
    ProjectDao projectDao = new ProjectDao("jdbc:mysql://localhost:3306/construction_management_system_db", "root", "");
    boolean success = projectDao.addProject(newProject);

    // Show a success or error message based on the result
    if (success) {
        JOptionPane.showMessageDialog(this, "Project added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "Failed to add project. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    // Optionally, you can clear the input fields after adding the project
    clearInputFields();
    setupProjectsJTable();
    }//GEN-LAST:event_addBTNActionPerformed
private boolean validateInput(String projectName, String description, String location, Date startDate, Date endDate) {
    // Check if the input fields contain valid data

    if (projectName.isEmpty() || description.isEmpty() || location.isEmpty() || startDate == null || endDate == null) {
        // If any of the required fields is empty, return false
        return false;
    }

    // Check if the start date is before the end date
    if (startDate.after(endDate)) {
        // If the start date is after the end date, return false
        return false;
    }

    return true;  // Placeholder, replace with your validation logic
}

private void clearInputFields() {
    // Clear the input fields after adding a project
    projectIDTextField.setText("");
    projectNameTextField.setText("");
    descriptionTextField.setText("");
    locationTextField.setText("");
    startDateChooser.setDate(null);
    endDateChooser.setDate(null);
}

// Add the following method in your ProjectManagement class
private void setupProjectsJTable() {
    // Define the column names
    String[] columnNames = {"Project ID", "Name", "Description", "Location", "Start Date", "End Date"};

    // Create a DefaultTableModel with the specified columns
    DefaultTableModel model = new DefaultTableModel(columnNames, 0);
    projectjTable.setModel(model);
    

    // Retrieve data from the database and add it to the table
    ProjectDao projectDao = new ProjectDao("jdbc:mysql://localhost:3306/construction_management_system_db", "root", "");
    List<Project> projectList = projectDao.getAllProjects();

    for (Project project : projectList) {
        Object[] rowData = {project.getProjectID(), project.getName(), project.getDescription(), project.getLocation(), project.getStartDate(), project.getEndDate()};
        model.addRow(rowData);
    }
    // Set up a mouse listener to detect clicks on the "Description" column
        projectjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int column = projectjTable.columnAtPoint(evt.getPoint());
                int row = projectjTable.rowAtPoint(evt.getPoint());

                // Assuming "Description" is the third column (index 2)
                if (column == 2 && row >= 0) {
                    // Display a pop-up window with the full content of the cell
                    showDescriptionDialog(projectjTable.getValueAt(row, column).toString());
                }
            }
        });
}
private void showDescriptionDialog(String description) {
        if (descriptionDialog == null) {
            descriptionDialog = new JDialog(this, "Description Details", true);
            descriptionDialog.setSize(500, 300);
            descriptionDialog.setLocationRelativeTo(this);

            JTextArea descriptionTextArea = new JTextArea();
            descriptionTextArea.setEditable(false);
            descriptionTextArea.setLineWrap(true);
            descriptionTextArea.setWrapStyleWord(true);
            JScrollPane scrollPane = new JScrollPane(descriptionTextArea);
            descriptionDialog.add(scrollPane);

            JButton closeButton = new JButton("Close");
            closeButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    descriptionDialog.dispose();
                }
            });

            descriptionDialog.add(BorderLayout.SOUTH, closeButton);
        }

        JTextArea descriptionTextArea = (JTextArea) ((JScrollPane) descriptionDialog.getContentPane().getComponent(0)).getViewport().getView();
        descriptionTextArea.setText(description);

        descriptionDialog.setVisible(true);
    }




    private void denyBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_denyBTNActionPerformed
        int selectedRow = projectAssignmentRequestsTable.getSelectedRow();

    if (selectedRow != -1) {
        DefaultTableModel model = (DefaultTableModel) projectAssignmentRequestsTable.getModel();
        int requestID = (int) model.getValueAt(selectedRow, 0); // Assuming requestID is in the first column

        RequestDao requestDao = new RequestDao(); // Create an instance

        boolean updated = requestDao.updateRequestStatusToDenied(requestID);

        if (updated) {
            JOptionPane.showMessageDialog(this, "Request Denied Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            setupProjectAssignmentRequestsTable(); // Refresh the table after updating
        } else {
            JOptionPane.showMessageDialog(this, "Failed to Deny Request", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a request to deny", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_denyBTNActionPerformed

    private void approveBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBTNActionPerformed
           int selectedRow = projectAssignmentRequestsTable.getSelectedRow();
    if (selectedRow >= 0) {
        DefaultTableModel model = (DefaultTableModel) projectAssignmentRequestsTable.getModel();
        int requestID = (int) model.getValueAt(selectedRow, 0); // Assuming requestID is in column 0

        RequestDao requestDao = new RequestDao();
        try {
            boolean updated = requestDao.updateRequestStatusToApproved(requestID); // Update status to "Approved"

            if (updated) {
                JOptionPane.showMessageDialog(this, "Request Approved Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                // Refresh the table after updating the status
                setupProjectAssignmentRequestsTable();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to Approve Request", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error Occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a request to approve", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_approveBTNActionPerformed

   private void setupProjectAssignmentRequestsTable() {
    // Define all column names
    String[] columnNames = {"requestID", "userID", "projectID", "status"};

    // Create a DefaultTableModel with the specified columns
    DefaultTableModel model = new DefaultTableModel(columnNames, 0);
    projectAssignmentRequestsTable.setModel(model);

    // Clear the existing data in the table
    model.setRowCount(0);

    // Retrieve all project assignment requests from the database
    RequestDao requestDao = new RequestDao(); // Create an instance
    List<ProjectAssignmentRequest> requests = requestDao.getAllProjectAssignmentRequests();

    // Populate the table with the retrieved data
    for (ProjectAssignmentRequest request : requests) {
        Object[] rowData = {
            request.getRequestID(),
            request.getUserID(),
            request.getProjectID(),
            request.getStatus()
        };
        model.addRow(rowData);
    }
}


    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        AdminDashboard admin = new AdminDashboard();

            // Make the Signup form visible
            admin.setVisible(true);

            // Close or hide the current form if necessary
            this.setVisible(false); // Hide the current form
    }//GEN-LAST:event_backBTNActionPerformed

    private void projectAssignmentRequestsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectAssignmentRequestsTableMouseClicked
        

    }//GEN-LAST:event_projectAssignmentRequestsTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjectManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjectManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjectManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjectManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjectManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBTN;
    private javax.swing.JButton approveBTN;
    private javax.swing.JButton backBTN;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JButton denyBTN;
    private javax.swing.JTextArea descriptionTextField;
    private com.toedter.calendar.JDateChooser endDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JTable projectAssignmentRequestsTable;
    private javax.swing.JTextField projectIDTextField;
    private javax.swing.JTextField projectNameTextField;
    private javax.swing.JTable projectjTable;
    private com.toedter.calendar.JDateChooser startDateChooser;
    private javax.swing.JButton updateBTN;
    // End of variables declaration//GEN-END:variables
}
